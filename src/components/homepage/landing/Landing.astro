<div class="landing-wrapper">
  <div class="marquee-wrapper"></div>
  <div class="details">
    <small class="detail-text">
      <span class="weather"></span><br />
      Montreal, QC
      <!-- <br /> Working internationally -->
    </small>
    <small class="detail-text"
      >UX/UI Design <br />Web Development <br /> Brand Strategy</small
    >
    <small class="detail-text details-flex"
      ><span class="label">Socials</span>
      <span>
        <a
          href="https://www.are.na/andrew-nowacki/"
          rel="noreferrer"
          target="_blank">Are.na</a
        >
        <br />
        <a
          href="https://www.instagram.com/andrewnowacki_/"
          rel="noreferrer"
          target="_blank">Instagram</a
        >
      </span></small
    >
    <small class="detail-text details-flex"
      ><span class="label">Contact</span>
      <span>
        <a
          href="mailto:andrew.p.nowacki@gmail.com"
          rel="noreferrer"
          target="_blank">andrew.p.nowacki@gmail.com</a
        >
        <br />
        <a href="sms:4388847079"> (438) 884-7079</a>
      </span>
    </small>
  </div>
</div>

<style lang="scss">
  .landing-wrapper {
    border-radius: 60px;
    overflow: hidden;
    background: var(--white);
    position: relative;
  }
  .marquee-wrapper {
    border-radius: 30px;
    margin: 2.5rem;
    background: var(--grey-200);
    height: 500px;
  }
  .details {
    width: 90%;
    margin: 0 auto;
    margin-bottom: 4rem;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }
  .detail-text {
    letter-spacing: 0.03rem;
    text-transform: uppercase;
    &:not(.label) {
      color: var(--grey-300);
    }
  }
  .details-flex {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    .label {
      margin-right: 2rem;
      color: var(--grey-200);
    }
  }
</style>

<script>
  // get clock
  function updateClock() {
    const now = new Date();
    let hours = now.getHours();
    let minutes = now.getMinutes();
    let seconds = now.getSeconds();

    // Format the time
    const timeString = `${hours.toString().padStart(2, "0")}:${minutes
      .toString()
      .padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

    // Update the clock element
    const clockElement = document.querySelector(".clock");
    clockElement.textContent = timeString;
  }

  // Update the clock immediately
  updateClock();

  // Update the clock every second
  setInterval(updateClock, 1000);

  // get weather
  const apiKey = import.meta.env.PUBLIC_WEATHER_API_KEY;
  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Montreal&units=metric&appid=${apiKey}`;

  fetch(apiUrl)
    .then((res) => res.json())
    .then((data) => {
      const weatherID = data.weather[0].id;

      function getWeatherEmoji(weatherID) {
        if (weatherID === 800) {
          return "Sunny ☀️";
        } else if (weatherID > 800 && weatherID < 804) {
          return "Some clouds 🌤";
        } else if (weatherID === 804) {
          return "Overcast ☁";
        } else if (weatherID < 781 && weatherID > 700) {
          return "Foggy 🌫";
        } else if (weatherID === 781) {
          return "Tornado 🌪";
        } else if (weatherID < 700 && weatherID >= 600) {
          return "Snowy 🌨";
        } else if (weatherID < 600 && weatherID > 500) {
          return "🌧";
        } else if (weatherID === 500) {
          return "Light Rain 🌦";
        } else if (weatherID < 500 && weatherID >= 300) {
          return "Drizzle 🌨";
        } else if (weatherID <= 221 && weatherID >= 200) {
          return "Thunderstorm 🌩";
        } else if (weatherID <= 232 && weatherID >= 230) {
          return "Thunderstorm ⛈";
        }
        return "";
      }
      const weatherDescription = getWeatherEmoji(weatherID);
      const temperature = Math.trunc(`${data.main.temp}`);

      const weatherElement = document.querySelector(".weather");
      weatherElement.textContent = `${temperature}°C, ${weatherDescription}`;

      const areaElement = document.querySelector(".area");
      areaElement.textContent = `${data.name}, QC`;
    });
</script>
