---
const { data } = Astro.props;
import { Image } from "@astrojs/image/components";
import AlbumCarousel from "../play/AlbumCarousel.astro";
---

<div class="artwork-wrapper">
  <div class="artwork-flex">
    <div class="artwork-text">
      <p>
        {data.artist}
      </p>
      <h3>
        {data.title}
      </h3>
      {
        data.bio.length > 140 ? (
          <div id="expand">
            <div class="small-desc">
              <small>{data.bio}</small>
            </div>
            <button class="read-more">
              <small>Read More</small>
            </button>
          </div>
        ) : (
          <small>{data.bio}</small>
        )
      }
    </div>
    <div class="artwork">
      {
        data.image.length > 1 ? (
        // if there are more than one image, render a carousel
          <AlbumCarousel data={data.image} />
          // else just render the image
        ) : (
          data.image.map((img) => {
            return (
              <Image
                src={img.src}
                alt={`Album cover for ${data.artist} - ${data.title}`}
                width={812}
                height={812}
                quality={100}
                format="webp"
                style="height: 100%, aspectRatio: 1/1"
                class="image"
              />
            );
          })
        )
      }
    </div>
  </div>
</div>

<style lang="scss">
  .artwork-wrapper {
    background: var(--white);
    border-radius: var(--border-xl);
    padding: 5rem 0;
    margin: 1.25rem auto;
  }
  .artwork-flex {
    display: flex;
    margin: 0 auto;
    width: 90%;
  }
  .artwork-text {
    flex-basis: 50%;
    align-self: center;
    p,
    small {
      color: var(--grey-300);
    }
    h3 {
      width: 80%;
      margin-bottom: 1rem;
    }
    small {
      display: block;
      width: 75%;
    }
  }
  .artwork {
    flex-basis: 50%;
    position: relative;
    aspect-ratio: 1/1;
    width: 50%;
    height: auto;
  }
  .image {
    height: auto;
    aspect-ratio: 1/1;
    border-radius: 10px;
    filter: drop-shadow(0px 4px 25px rgba(186, 186, 186, 0.25));
  }

  #expand {
    // position: relative;
    // .read-more {
    //   position: absolute;
    //   bottom: 0;
    //   left: 0;
    // }
  }
  .read-more {
    background: unset;
    border: unset;
  }
  .small-desc {
    max-height: 5rem;
    overflow: hidden;
    transition: all 0.3s ease-in-out;
    position: relative;

    &:after {
      transition: all 0.3s ease-in-out;
      content: "";
      opacity: 1;
      position: absolute;
      bottom: 0;
      width: 100%;
      background: red;
      height: 3rem;
      background: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0) 0%,
        #ffffff 75%
      );
    }
  }

  .small-desc.expand {
    max-height: 250px;
    &:after {
      opacity: 0;
    }
  }

  @media (max-width: 768px) {
    .artwork-wrapper {
      padding: 2.5rem 0;
      padding-bottom: 1rem;
    }
    .artwork-flex {
      flex-direction: column;
      padding-bottom: 1rem;
    }
    .artwork-text {
      flex-basis: 100%;
      width: 100%;
      margin-bottom: 2rem;
      small {
        width: 100%;
      }
    }
    .artwork {
      width: 100%;
    }
  }
</style>

<script>
  const expands = document.querySelectorAll("#expand");
  expands.forEach((expand) => {
    expand.querySelector("button").addEventListener("click", function () {
      expand.querySelector(".small-desc").classList.toggle("expand");
    });
  });
</script>
